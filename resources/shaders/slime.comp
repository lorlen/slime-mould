#version 460 core

#define X 16
#define Y 16
#define Z 1

layout(local_size_x = X, local_size_y = Y, local_size_z = Z) in;

layout(rgba8, location = 0) restrict uniform image2D image;

// Source: www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf
uint hash(uint state) {
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

vec4 uint2vec4(uint num) {
    return vec4(float(num) / 4294967295.0);
}

void main() {
    vec2 size = imageSize(image);
    uint globalInvocationIndex =
        gl_GlobalInvocationID.z * gl_NumWorkGroups.x * gl_NumWorkGroups.y * gl_WorkGroupSize.x * gl_WorkGroupSize.y +
        gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x +
        gl_GlobalInvocationID.x;

    imageStore(image, ivec2(gl_GlobalInvocationID.xy), uint2vec4(hash(globalInvocationIndex)));
}
